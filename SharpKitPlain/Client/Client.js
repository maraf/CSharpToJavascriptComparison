/* Generated by SharpKit 5 v5.4.4 */
if (typeof($CreateDelegate)=='undefined'){
    if(typeof($iKey)=='undefined') var $iKey = 0;
    if(typeof($pKey)=='undefined') var $pKey = String.fromCharCode(1);
    var $CreateDelegate = function(target, func){
        if (target == null || func == null) 
            return func;
        if(func.target==target && func.func==func)
            return func;
        if (target.$delegateCache == null)
            target.$delegateCache = {};
        if (func.$key == null)
            func.$key = $pKey + String(++$iKey);
        var delegate;
        if(target.$delegateCache!=null)
            delegate = target.$delegateCache[func.$key];
        if (delegate == null){
            delegate = function(){
                return func.apply(target, arguments);
            };
            delegate.func = func;
            delegate.target = target;
            delegate.isDelegate = true;
            if(target.$delegateCache!=null)
                target.$delegateCache[func.$key] = delegate;
        }
        return delegate;
    }
}


if (typeof(JsTypes) == "undefined")
    var JsTypes = [];
var Client$ProductClient = {
    fullname: "Client.ProductClient",
    baseTypeName: "System.Object",
    assemblyName: "Client",
    Kind: "Class",
    definition: {
        ctor: function (){
            System.Object.ctor.call(this);
        },
        GetList: function (onSuccess){
        },
        Get: function (id, onSuccess){
        }
    }
};
JsTypes.push(Client$ProductClient);
var Client$ProductView = {
    fullname: "Client.ProductView",
    baseTypeName: "System.Object",
    assemblyName: "Client",
    Kind: "Class",
    definition: {
        ctor: function (root){
            this.root = null;
            System.Object.ctor.call(this);
            this.root = root;
        },
        Render: function (){
            this.root.html("Loading...");
            var client = new Client.ProductClient.ctor();
            client.GetList($CreateDelegate(this, this.OnListLoaded));
        },
        OnListLoaded: function (models){
            this.root.html("Product count: " + models.get_Count());
        }
    }
};
JsTypes.push(Client$ProductView);

